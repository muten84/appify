var STATIC_RESOURCES = ['index.html', 'static/app.js', 'static/app.css', 'images/logo.png'];
var ACTIVE_CACHE = self.registration.scope + '$$active';
var WAITING_CACHE = self.registration.scope + '$$waiting';

self.addEventListener('activate', function(event) {
  event.waitUntil(caches.open(WAITING_CACHE).then(function(cache) {
    return cache.addAll(STATIC_RESOURCES);
  }));
});

self.addEventListener('install', function(event) {
  return caches.delete(ACTIVE_CACHE).then(function() {
    return Promise.all([
      caches.open(WAITING_CACHE),
      caches.open(ACTIVE_CACHE)
    ]).then(function(results) {
      var waitingCache = results[0];
      var activeCache = results[1];

      return waitingCache.keys().then(function(requests) {
        return Promise.all(requests.map(function(request) {
          return waitingCache.match(request).then(function(response) {
            return activeCache.put(request, response);
          });
        }));
      }).then(function() {
        return caches.delete(source);
      });
    });
  });
});

self.addEventListener('fetch', function(event) {
	var url = new URL(event.request.url);

	if (STATIC_RESOURCES.indexOf(url.pathname) !== -1) {
		// cache only
		event.respondWith(caches.open(ACTIVE_CACHE).then(function(cache) {
			return cache.match(event.request);
		}));
	} else if (/^\/images\/large\//.test(url.pathname)) {
		// network only
		event.respondWith(fetch(event.request));
	} else if (/^\/images\/thumbs\//.test(url.pathname)) {
		// cache first
		event.respondWith(caches.open(ACTIVE_CACHE).then(function(cache) {
			return cache.match(event.request);
		}).then(function(response) {
			if (response) {
				return response;
			}

			return fetch(event.request).then(function(response) {
				if (response) {
					cache.put(event.request, response);
				}

				return response;
			})
		}));
	} else {
		// network first
		event.respondWith(fetch(event.request).then(function(response) {
			caches.open(ACTIVE_CACHE).then(function(cache) {
				if (response) {
					cache.put(event.request, response);
					return response;
				}
				return cache.match(event.request);
			})
		}));
	}
});