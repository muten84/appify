/* global shed, Response */
/* jshint worker: true */
'use strict';


importScripts('../sw-toolbox.js');

self.onfetch = function() {};

toolbox.options.debug = true;

toolbox.router.get('/shed-demo/:foo/:bar.html', function(request, keys) {
  return new Response('Get a request: ' + JSON.stringify(keys));
}, {origin: 'http://localhost:8000'});

toolbox.router.get('/shed-demo/:foo/:bar', function(request, keys) {
  return new Response('Get a request: ' + JSON.stringify(keys));
});

toolbox.router.get('/(.*)', function(request, keys) {
  return new Response('Get a request: ' + JSON.stringify(keys));
});

toolbox.router.get('/', function(request, keys) {
  return new Response('Get a request: ' + JSON.stringify(keys));
}, {origin: 'http://www.google.com'});

toolbox.router.get('test-1.html', toolbox.cacheOnly);
toolbox.router.get('test-2.html', toolbox.cacheFirst);
toolbox.router.get('test-3.html', toolbox.networkOnly);
toolbox.router.get('test-4.html', toolbox.networkFirst);
toolbox.router.get('test-5.html', toolbox.fastest);
toolbox.router.get('test-6.html', toolbox.networkFirst);

toolbox.precache(['test-1.html','test-2.html', 'test-3.html', 'test-4.html', 'test-5.html']);

toolbox.cache('test-7.html', {cacheName: 'foofoo'});
toolbox.router.get('test-7.html', toolbox.cacheOnly, {cacheName: 'foofoo'});

toolbox.router.get('non-existant.html', toolbox.fastest);

self.addEventListener('push', function(event) {
	var data = event.data.json();
	return new Notification(data.title, {
		serviceWorker: true,
		body: data.message
	});
});

toolbox.router.get('test-6.html', toolbox.networkFirst);


//toolbox.router.default = toolbox.cacheFirst;

